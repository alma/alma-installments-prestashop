version: 3

env:
  REPOSITORY: alma-installments-prestashop

tasks:

  default:
    silent: true
    cmds:
      - task -l

  docker:build:
    desc: Build prestashop docker image
    cmds:
      - docker compose build prestashop

  test:coverage:
    desc: Execute Unit Tests with coverage
    deps:
      - docker:build
    cmds:
      - docker compose run --rm prestashop

  dist:
    desc: Build the zip file of the module
    deps:
      - clean
    cmds:
      - docker build -t alma_prestashop_builder:latest scripts/build/
      - docker run --rm -u $(id -u):$(id -g) -w ${PWD} -v "${PWD}:${PWD}" alma_prestashop_builder:latest /bin/sh scripts/build/build-dist-docker.sh

  clean:
    desc: Remove the dist folder
    cmds:
      - rm -rf ./dist

  install-tools:
    desc: Composer install of tools
    sources:
      - alma/composer.json
      - alma/composer.lock
    cmds:
      - composer install --optimize-autoloader --working-dir=alma

  lint:ci:
    desc: Run linter within docker-compose for the CI
    deps:
      - docker:build
    cmds:
      - docker compose run --no-deps --rm --entrypoint "php" -w /var/www/html/modules prestashop alma/vendor/bin/php-cs-fixer fix --dry-run --diff alma

  lint:
    desc: Run linter
    deps:
      - install-tools
    cmds:
      - php alma/vendor/bin/php-cs-fixer fix --dry-run --diff alma
      # Search for variables in smarty templates that are not escaped
      # ="{\$[^\s|]*} => Search for string ="{$<variable>}" with variable not followed by the character |
      # exits with 0 if no match is found
      # exits with 1 with an error message if a match is found
      # TODO : Check rule to be clarified with Prestashop, check commented in the meantime
      # - grep --color -r -P  '="{\$[^\s|]*}' alma/views/templates/* || exit 0 && >&2 echo "Variables in smarty templates should use |escape:'htmlall':'UTF-8'" && exit 1

  lint:fix:
    desc: Run linter and apply fix
    deps:
      - install-tools
    cmds:
      - php alma/vendor/bin/php-cs-fixer fix alma
      # Execute autoindex to add index in all folders
      - php ./alma/vendor/bin/autoindex prestashop:add:index --exclude=vendor alma/
      # Remove blank line at the end of index.php file
      # Script commented as it is not coherent with the linter rules
      - #./scripts/remove-blank-line-index.sh

  php-compatibility:
    desc: Check compatibility code
    deps:
      - install-tools
    cmds:
      - php ./alma/vendor/bin/phpcs -p alma --standard=PHPCompatibility -s --runtime-set testVersion 5.6-8.1 --ignore=\*/vendor/\*

  crowdin:
    internal: true
    preconditions:
      - sh: which crowdin
        msg: Crowdin CLI is required

  crowdin:download:
    desc: Download translations from Crowdin
    deps:
      - crowdin
    cmds:
      - crowdin download

  crowdin:upload:
    desc: Upload translations to Crowdin
    deps:
      - crowdin
    cmds:
      - crowdin upload sources

  release:
    desc: Create a release pull request
    cmds:
    - task: trigger-release-pull-request-workflow
      vars: 
        WORKFLOW_FILE: 'release-pull-request.yml'
        RELEASE_TYPE: 'release'

  hotfix:
    desc: Create a hotfix pull request
    cmds:
    - task: trigger-release-pull-request-workflow
      vars: 
        WORKFLOW_FILE: 'hotfix-pull-request.yml'
        RELEASE_TYPE: 'hotfix'

  trigger-release-pull-request-workflow:
    internal: true
    vars:
      WORKFLOW_FILE: '{{default "create-release-pr.yml" .WORKFLOW_FILE}}'
      RELEASE_TYPE: '{{default "release" .RELEASE_TYPE}}'
    silent: true
    preconditions:
    - sh: gh --version
      msg: |
        ⚠️ This task requires `gh` (Github CLI).
        Please check out: https://github.com/cli/cli#installation
        You'll need a personal access token to authenticate with `gh`.
        Please check out: https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token#creating-a-personal-access-token-classic
        Then, run `gh auth login` or set the GITHUB_TOKEN environment variable with your personal access token.
    cmds:
      - |
        # If RELEASE_TYPE is hotfix, ask for a changelog message
        INPUTS_FLAG=""
        if [ "{{.RELEASE_TYPE}}" == "hotfix" ]; then
          read -p "Please, provide a changelog message for this hotfix: "
          INPUTS_FLAG="-f changelog-message='$REPLY'"
        fi
        echo "Creating {{.RELEASE_TYPE}} pull request..."
        eval gh workflow run {{.WORKFLOW_FILE}} $INPUTS_FLAG
        echo "{{.RELEASE_TYPE}} pull request created, check out https://github.com/alma/$REPOSITORY/pulls?q=is%3Aopen+is%3Apr+label%3A{{.RELEASE_TYPE}}"
        echo "If no pull request is created, check out https://github.com/alma/$REPOSITORY/actions/workflows/{{.WORKFLOW_FILE}}."
        echo "Please, review and merge the pull request."
        echo "After merging, the release will be automatically created."
